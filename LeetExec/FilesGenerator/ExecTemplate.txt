namespace LeetLib;

public class {name}Exec : LeetBase
{
    public override void Execute()
    {
        base.Execute();
        foreach (var testCase in Cases)
        {
            CheckCase(testCase, [new {name}V1()]);
        }
    }

    protected override string Name => "{fullName}";
    
    private void CheckCase({name}Case testCase, {name}Base[] algorithms)
    {
        Console.WriteLine($"Case: {testCase.Description}");
        
        foreach (var algorithm in algorithms)
        {
            // measure execution time
            var watch = System.Diagnostics.Stopwatch.StartNew();
            var result = algorithm.{name}({arguments});
            watch.Stop();
            Console.WriteLine($"{algorithm.Name}: {(result == testCase.Expected ? "Test Passed" : "Test Failed")} in {watch.ElapsedTicks}ticks");
        }
    }
    
    private {name}Case[] Cases
    {
        get
        {
            return new[] {};
        }
    }
}

public class {name}Case : TestCase
{
    {parameters}
    public {returns} Expected { get; set; }
    public override string Description { get; }
}